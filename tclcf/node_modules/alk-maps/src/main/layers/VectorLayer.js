var LayerApi = require('./LayerApi')

module.exports = function(ALKMaps, map, options) {
    var strategies
    var clusterStrategy
    if (!options.disableClustering) {
        clusterStrategy = new ALKMaps.Strategy.Cluster({
            distance: options.clusterDistance || 50,
            threshold: options.clusterThreshold || 2
        })
        strategies = [clusterStrategy]
    }

    var styleMap = {}
    if (options.defaultStyle) {
        styleMap.default = options.defaultStyle
    }
    if (options.selectedStyle) {
        styleMap.select = options.selectedStyle
    }

    //vector layer
    var layer = new ALKMaps.Layer.Vector(
        options.layerName || 'Vector Layer', {
        strategies: strategies,
        styleMap: new ALKMaps.StyleMap(styleMap)
    })
    layer.options = options
    map.addLayer(layer)

    //API related stuff
    var api = new LayerApi(ALKMaps, map, layer, clusterStrategy, options)
    api.eventsEnabled = true

    api.vectors = []
    api.addItem = function(item) {
        var lonLat = api.createLonLat(item.location.lon, item.location.lat)
        var vector = new ALKMaps.Feature.Vector(
            new ALKMaps.Geometry.Point(lonLat.lon, lonLat.lat)
        )
        vector.attributes = item
        api.vectors.push(vector)
    }

    api.clearItems = function() {
        if (clusterStrategy) {
            clusterStrategy.clearCache()
        }
        layer.removeAllFeatures()
    }

    api.doneAddingItems = function() {
        layer.addFeatures(api.vectors)
        api.vectors = []
    }

    api.selectFeatures = function(callback) {
        api.selectFeature.unselectAll()
        var found = layer.features.filter(callback)
        if (found.length) {
            found.forEach(api.selectFeature.select.bind(api.selectFeature))
        }
    }
    
    api.unselectFeatures = function() {
        api.selectFeature.unselectAll()
    }

    return api
}
