describe('MarkerLayer', function() {
    var MarkerLayer
    var ALKMaps
    var LayerApi
    var map

    beforeEach(function() {
        ALKMaps = new MockALKMaps()
        map = new MockMap()
        LayerApi = new MockLayerApi()

        MarkerLayer = proxyquire('../main/layers/MarkerLayer', {
            './LayerApi': LayerApi.constructor
        })
    })

    it('should create a marker layer', function() {
        var layer = { abc: 123 }
        ALKMaps.Layer.Markers.returns(layer)

        var markerLayerApi = new MarkerLayer(ALKMaps, map, {})

        map.addLayer.should.have.been.calledWith(layer)
        ALKMaps.Layer.Markers.should.have.been.calledWith('Marker Layer')
        markerLayerApi.should.equal(LayerApi.api)
        ALKMaps.Icon.should.have.been.calledWith(ALKMaps.IMAGE.TRUCK_BLUE)
        LayerApi.constructor.should.have.been.calledWith(ALKMaps, map, layer, null, {})
    })

    it('should support options', function() {
        var options = {
            layerName: 'abc',
            icon: 123
        }
        var layer = { abc: 123 }
        ALKMaps.Layer.Markers.returns(layer)

        var markerLayerApi = new MarkerLayer(ALKMaps, map, options)

        ALKMaps.Layer.Markers.should.have.been.calledWith(options.layerName)
        markerLayerApi.should.equal(LayerApi.api)
        ALKMaps.Icon.should.have.been.calledWith(options.icon)
        LayerApi.constructor.should.have.been.calledWith(ALKMaps, map, layer, null, options)
    })

    describe('once created', function() {
        var layer
        var markerLayerApi

        beforeEach(function() {
            layer = {}
            ALKMaps.Layer.Markers.returns(layer)

            markerLayerApi = new MarkerLayer(ALKMaps, map, {})
        })

        it('should support adding items', function() {
            layer.addMarker = sinon.stub()
            var item = {
                location: {
                    lon: 123,
                    lat: 321
                }
            }
            var marker = { marker: true }
            ALKMaps.Marker.returns(marker)

            markerLayerApi.addItem(item, {})

            ALKMaps.Marker.should.have.been.calledWith(
                { lon: 123, lat: 321 },
                'clonedIcon',
                null,
                { map: map, mouseOver: false }
            )
            layer.addMarker.should.have.been.calledWith({ marker: true, attributes: item })
        })

        it('should support support adding items with options', function() {
            layer.addMarker = sinon.stub()
            var item = {
                someField: 'someOtherText',
                location: {
                    lon: 123,
                    lat: 321
                }
            }
            var marker = { marker: true }
            ALKMaps.Marker.returns(marker)
            var options = {
                hoverField: 'someField',
                icon: {
                    clone: sinon.stub().returns('optionalIcon')
                }
            }
            ALKMaps.Icon.withArgs(options.icon).returns(options.icon)

            markerLayerApi.addItem(item, options)

            ALKMaps.Marker.should.have.been.calledWith(
                { lon: 123, lat: 321 },
                'optionalIcon',
                'someOtherText',
                { map: map, mouseOver: true }
            )
            layer.addMarker.should.have.been.calledWith({ marker: true, attributes: item })
        })

        it('should support clearing items', function() {
            layer.clearMarkers = sinon.stub()

            markerLayerApi.clearItems()

            layer.clearMarkers.should.have.been.calledWith()
        })
    })
})
