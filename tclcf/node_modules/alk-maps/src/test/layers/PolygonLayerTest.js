describe('PolygonLayer', function() {
    var PolygonLayer
    var ALKMaps
    var map
    var VectorLayer
    var api
    var options

    beforeEach(function() {
        ALKMaps = new MockALKMaps()
        map = new MockMap()

        api = { api: true }
        options = { options: true }
        VectorLayer = sinon.stub().returns(api)

        PolygonLayer = proxyquire('../main/layers/PolygonLayer', {
            './VectorLayer': VectorLayer
        })
    })

    it('should be a styled vector layer', function() {
        var polygonLayerApi = new PolygonLayer(ALKMaps, map, options)

        VectorLayer.should.have.been.calledWith(ALKMaps, map, options)
        polygonLayerApi.should.equal(api)
        polygonLayerApi.eventsEnabled.should.be.false
    })

    it('should support adding polygons', function() {
        var ring = { ring: true }
        var item1 = { location: { lon: 123, lat: 456 } }
        var item2 = { location: { lon: 789, lat: 100 } }
        var projectedPoints = { proj: true }
        var projection = { projection: true }
        var mapProjection = { mapProj: true }
        var ringFeature = { ringFeature: true }
        ALKMaps.Geometry.Point = function(x, y) {
            return { lon: x, lat: y }
        }
        ALKMaps.Geometry.LinearRing.returns(ring)
        ALKMaps.Projection = sinon.stub().returns(projection)
        api.layer = {
            addFeatures: sinon.stub(),
            removeAllFeatures: sinon.stub()
        }
        map.getProjectionObject = sinon.stub().returns(mapProjection)
        ALKMaps.Feature.Vector.returns(ringFeature)

        //add each point
        var polygonLayerApi = new PolygonLayer(ALKMaps, map, options)
        polygonLayerApi.addItem(item1)
        polygonLayerApi.addItem(item2)

        //weird mocking
        ALKMaps.Geometry.Point = { transformArray: sinon.stub().returns(projectedPoints) }

        //finish the polygon
        polygonLayerApi.doneAddingItems()

        ALKMaps.Geometry.Point.transformArray.should.have.been.calledWith([
            { lat: 456, lon: 123 },
            { lat: 100, lon: 789 }],
            projection,
            mapProjection
        )
        ALKMaps.Geometry.LinearRing.should.have.been.calledWith(projectedPoints)
        ALKMaps.Feature.Vector.should.have.been.calledWith(ring, null, {
            fillColor: '#AA0000',
            fillOpacity: 0.5,
            strokeColor: '#AA0000',
            strokeWidth: 3
        })
        api.layer.removeAllFeatures.should.have.been.called
        api.layer.addFeatures.should.have.been.calledWith([ringFeature])
    })

    it('should support clearing features', function() {
        api.layer = { removeAllFeatures: sinon.stub() }

        var polygonLayerApi = new PolygonLayer(ALKMaps, map, options)
        polygonLayerApi.clearItems()

        api.layer.removeAllFeatures.should.have.been.called
    })
})
