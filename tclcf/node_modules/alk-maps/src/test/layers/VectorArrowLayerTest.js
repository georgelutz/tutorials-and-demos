describe('VectorArrowLayer', function() {
    var VectorArrowLayer
    var ALKMaps
    var map
    var api

    beforeEach(function() {
        ALKMaps = new MockALKMaps()
        map = new MockMap()

        api = {
            api: true,
            vectors: [],
            createLonLat: sinon.stub().returns({lon: 60, lat: 80}),
            layer: {
                addFeatures: sinon.stub()
            }
        }

        options = {}
        options.layerName = 'You Have Failed This City'

        VectorLayer = sinon.stub().returns(api)

        VectorArrowLayer = proxyquire('../main/layers/VectorArrowLayer', {
            './VectorLayer': VectorLayer
        })
    })

    it('should initialize', function() {
        var VectorArrowLayerApi = new VectorArrowLayer(ALKMaps, map, options)

        should.equal(options.defaultStyle, null)
        should.equal(options.selectedStyle, null)
        options.layerName.should.equal('You Have Failed This City')
        should.equal(VectorArrowLayerApi.styleMap, null)
        VectorArrowLayerApi.eventsEnabled.should.equal(false)
    })

    it('should add item', function() {
        var VectorArrowLayerApi = new VectorArrowLayer(ALKMaps, map, options)


        VectorArrowLayerApi.addItem({vehicle: 'Truck1'})

        VectorArrowLayerApi.vectors.should.deep.equal([{vehicle: 'Truck1'}])
    })

    it('should create lines between points', function() {
        var VectorArrowLayerApi = new VectorArrowLayer(ALKMaps, map, options)
        VectorArrowLayerApi.vectors = [
            {
                vehicle: 'Truck1',
                location: {
                    lon: 50,
                    lat: 40
                }
            },
            {
                vehicle: 'Truck2',
                location: {
                    lon: 60,
                    lat: 20
                }
            },
            {
                vehicle: 'Truck3',
                location: {
                    lon: 10,
                    lat: 30
                }
            }
        ]

        VectorArrowLayerApi.doneAddingItems()

        VectorArrowLayerApi.layer.addFeatures.should.have.been.called
        VectorArrowLayerApi.vectors.should.deep.equal([])

    })
})