describe('VectorMarkerLayer', function() {
    var VectorMarkerLayer
    var VectorMarkerLayerApi
    var ALKMaps
    var LayerApi
    var map
    var layer

    beforeEach(function() {
        ALKMaps = new MockALKMaps()
        map = new MockMap()
        LayerApi = new MockLayerApi()
        layer = { layer: true }
        ALKMaps.Layer.VectorMarkers.returns(layer)

        VectorMarkerLayer = proxyquire('../main/layers/VectorMarkerLayer', {
            './LayerApi': LayerApi.constructor
        })
    })

    it('should create a marker layer', function() {
        VectorMarkerLayerApi = new VectorMarkerLayer(ALKMaps, map, {})

        map.addLayer.should.have.been.calledWith(layer)
        ALKMaps.Layer.VectorMarkers.should.have.been.calledWith('Vector Marker Layer')
        VectorMarkerLayerApi.should.equal(LayerApi.api)
        LayerApi.constructor.should.have.been.calledWith(ALKMaps, map, layer, null, {})
    })

    it('should support options', function() {
        var options = {
            layerName: 'abc',
            color: 'colorful'
        }

        VectorMarkerLayerApi = new VectorMarkerLayer(ALKMaps, map, options)

        ALKMaps.Layer.VectorMarkers.should.have.been.calledWith(options.layerName)
        VectorMarkerLayerApi.should.equal(LayerApi.api)
        LayerApi.constructor.should.have.been.calledWith(ALKMaps, map, layer, null, options)
    })

    it('should support adding items', function() {
        var marker = { marker: true }
        layer.createMarker = sinon.stub().returns(marker)
        var item = {
            location: {
                lon: 123,
                lat: 321
            }
        }

        VectorMarkerLayerApi = new VectorMarkerLayer(ALKMaps, map, {})
        VectorMarkerLayerApi.addItem(item, {})

        layer.createMarker.should.have.been.calledWith({
            lon: 123,
            lat: 321
        }, {
            markerType: 'green'
        }, null)
        marker.attributes.should.equal(item)
    })

    it('should support adding items with custom color marker', function() {
        var marker = { marker: true }
        layer.createMarker = sinon.stub().returns(marker)
        var item = {
            location: {
                lon: 123,
                lat: 321
            }
        }
        var options = {
            markerType: 'colorful'
        }

        VectorMarkerLayerApi = new VectorMarkerLayer(ALKMaps, map, options)
        VectorMarkerLayerApi.addItem(item)

        layer.createMarker.should.have.been.calledWith({
            lon: 123,
            lat: 321
        }, {
            markerType: 'colorful'
        }, null)
        marker.attributes.should.equal(item)
    })

    it('should support adding items with custom icon marker', function() {
        var marker = { marker: true }
        layer.createMarker = sinon.stub().returns(marker)
        var item = {
            location: {
                lon: 123,
                lat: 321
            }
        }
        var options = {
            markerType: 'custom',
            externalGraphic: 'graphicUrl'
        }

        VectorMarkerLayerApi = new VectorMarkerLayer(ALKMaps, map, options)
        VectorMarkerLayerApi.addItem(item)

        layer.createMarker.should.have.been.calledWith({
            lon: 123,
            lat: 321
        }, {
            markerType: 'custom'
        }, {
            externalGraphic: 'graphicUrl',
            graphicHeight: 26,
            graphicWidth: 26,
            graphicXOffset: -13,
            graphicYOffset: -26
        })
        marker.attributes.should.equal(item)
    })

    it('should support adding items with external icon marker', function() {
        var marker = { marker: true }
        layer.createMarker = sinon.stub().returns(marker)
        var item = {
            location: {
                lon: 123,
                lat: 321
            }
        }
        var options = {
            markerType: 'custom',
            externalGraphic: 'graphicUrl',
            graphicHeight: 1,
            graphicWidth: 2,
            graphicXOffset: 3,
            graphicYOffset: 4
        }

        VectorMarkerLayerApi = new VectorMarkerLayer(ALKMaps, map, options)
        VectorMarkerLayerApi.addItem(item)

        layer.createMarker.should.have.been.calledWith({
            lon: 123,
            lat: 321
        }, {
            markerType: 'custom'
        }, {
            externalGraphic: 'graphicUrl',
            graphicHeight: 1,
            graphicWidth: 2,
            graphicXOffset: 3,
            graphicYOffset: 4
        })
        marker.attributes.should.equal(item)
    })

    it('should support clearing items', function() {
        layer.clearMarkers = sinon.stub()

        VectorMarkerLayerApi = new VectorMarkerLayer(ALKMaps, map, {})
        VectorMarkerLayerApi.clearItems()

        layer.clearMarkers.should.have.been.calledWith()
    })
})
