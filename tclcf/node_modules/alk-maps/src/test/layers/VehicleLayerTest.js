describe('VehicleLayer', function() {
    var VehicleLayer
    var ALKMaps
    var map
    var VectorLayer
    var VehicleLayerStyle
    var api
    var style
    var options

    beforeEach(function() {
        ALKMaps = new MockALKMaps()
        map = new MockMap()

        api = { api: true }
        style = {
            style: true,
            defaultStyle: {},
            clone: function() {
                style.cloned = true
                return style
            }
        }
        options = { options: true }
        VectorLayer = sinon.stub().returns(api)
        VehicleLayerStyle = sinon.stub().returns(style)

        VehicleLayer = proxyquire('../main/layers/VehicleLayer', {
            './VectorLayer': VectorLayer,
            './styles/VehicleLayerStyle': VehicleLayerStyle
        })
    })

    it('should be a styled vector layer', function() {
        var VehicleLayerApi = new VehicleLayer(ALKMaps, map, options)

        VehicleLayerStyle.should.have.been.calledWith(ALKMaps, options)
        options.defaultStyle.should.equal(style)
        VectorLayer.should.have.been.calledWith(ALKMaps, map, options)
        VehicleLayerApi.should.equal(api)
    })

    it('should honor provided style', function() {
        options.defaultStyle = style
        options.selectedStyle = style

        var VehicleLayerApi = new VehicleLayer(ALKMaps, map, options)

        VehicleLayerStyle.should.not.have.been.called
        options.defaultStyle.should.equal(style)
        options.selectedStyle.should.equal(style)
        VectorLayer.should.have.been.calledWith(ALKMaps, map, options)
        VehicleLayerApi.should.equal(api)
    })
})
