var fs = require('fs-extra')
var projectPackageJson = fs.readJsonSync('./package.json')
var _ = require('lodash')
var path = require('path')

var isLocalBuild = _.isEmpty(process.env.BUILD_NUMBER)
var isReleaseBuild = process.env.RELEASE_STAGE === 'final'

var locales = ['en-US', 'es-MX', 'fr-CA', 'pt-BR']

module.exports = {
    dist: './dist',
    stage: './stage',
    cleanPaths: ['./coverage', './dist', './stage', './promotion'],
    bundleInput: 'src/main/app.js',
    jsMain: [
        './src/main/**.js',
        './src/main/**/*.js',
        './src/main/**/**/*.js'
    ],
    jsTest: [
        './src/test/**.js',
        './src/test/**/*.js',
        './src/test/**/**/*.js',
        './node_modules/portal-core/src/test/testGlobals.js'
    ],
    lintOutput: './src',
    jsLint: [
        './src/**/*.js'
    ],
    locales: locales,
    localeBundles: _.map(locales, locale => ({
        locale,
        files: [
            `./src/main/resources/${locale}/*.yaml`,
            `./src/main/**/resources/${locale}/*.yaml`,
            `./node_modules/portal-core/src/main/*/resources/${locale}/*.yaml`,
            `./node_modules/*portal-modules/src/main/*/resources/${locale}/*.yaml`
        ]
    })),
    mochaConfig: {
        require: './node_modules/portal-core/src/test/testGlobals.js',
        reporter: process.env['MOCHA_REPORTER'] || 'dot'
    },
    staticFiles: [
        {
            files: [
                './src/main/static/**',
                './src/main/**/static/**',
                '!./node_modules/portal-core/src/main/core/static/index.html',
                './node_modules/portal-core/src/main/*/static/**',
                './node_modules/*portal-modules/src/main/*/static/**',
                './RELEASE_NOTES.md'
            ], dest: ''
        }, {
            files: [
                './node_modules/portal-core/CHANGELOG.md',
                './node_modules/*portal-modules/CHANGELOG.md'
            ],
            rename: file => file.basename = path.basename(file.dirname),
            dest: 'changelogs'
        }, {
            files: _.flattenDeep(_.map(locales, locale => {
                return [
                    `./node_modules/portal-core/node_modules/angular-i18n/angular-locale_${locale.toLowerCase()}.js`,
                    `./node_modules/angular-i18n/angular-locale_${locale.toLowerCase()}.js`
                ]
            })), dest: 'angular-i18n'
        }
    ],
    ignoreRevAll: [],
    enableMinification: !isLocalBuild || process.argv.slice(2).indexOf('--minify') >= 0,
    build: {
        name: projectPackageJson.name,
        version: isReleaseBuild ? projectPackageJson.version : 'latest',
        number: process.env.BUILD_NUMBER,
        tag: process.env.BUILD_TAG,
        url: process.env.BUILD_URL,
        gitRevision: process.env.GIT_COMMIT,
        gitBranch: process.env.GIT_BRANCH || 'master',
        portalCore: projectPackageJson.dependencies['portal-core']
    },
    promote: {
        cache: './promotion',
        // Order is important here
        // Each environment must have a corresponding S3 bucket.
        // IE, where project is the name in the package.json,
        // and qa is the target environment:
        // project-qa.connectedfleet.io
        environments: ['dev', 'qa', 'staging', 'prod']
    }
}
