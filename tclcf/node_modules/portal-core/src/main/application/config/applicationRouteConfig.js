const _ = require('lodash')

module.exports = /* @ngInject */
    function($stateProvider, routeHelper) {

        //add to routes
        $stateProvider
            .state('nav.application', {
                abstract: true,
                url: '/application',
                template: require('../../core/views/moduleBase.html'),
                resolve: {
                    permission: routeHelper.hasPermission('ROLE_APPLICATION_WRITE')
                }
            })

            .state('nav.application.list', {
                url: '/list/?density',
                template: '<application-list></application-list>',
                resolve: {
                    currentUser: routeHelper.currentUser,
                    applications: function(listService, Restangular) {
                        listService.page = listService.page || 1
                        listService.pageSize = listService.pageSize || 10

                        return Restangular.all('applications').getList()
                    }
                }
            })

            .state('nav.application.add', {
                url: '/add',
                template: '<application-edit></application-edit>',
                resolve: {
                    application: function(Restangular) {
                        return Restangular.restangularizeElement(null, {
                            adding: true,
                            realms: []
                        }, 'applications')
                    },
                    realms: function(Restangular) {
                        return Restangular.all('realms').getList()
                    }
                }
            })

            .state('nav.application.edit', {
                url: '/edit/:key',
                template: '<application-edit></application-edit>',
                resolve: {
                    application: routeHelper.get('applications'),
                    realms: function(Restangular, application) {
                        return Restangular.all('realms').getList()
                            .then(realms => {
                                return _.map(realms, realm => {
                                    realm.selected = _.includes(application.realms, realm.name)
                                    return realm
                                })
                            })
                    }
                }
            })
    }
