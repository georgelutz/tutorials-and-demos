const _ = require('lodash')

require('./listCards.scss')

module.exports = {
    bindings: {
        cardContent: '<',
        cols: '<',
        context: '<',
        currentUser: '<',
        rows: '<',
        sort: '<'
    },
    template: require('./listCards.html'),
    controller: class ListCards {
        /* @ngInject */
        constructor($state, customActionConfig, listService) {
            this.$state = $state
            this.customActionConfig = customActionConfig
            this.listService = listService
        }

        $onInit() {
            this.current = this.$state.current

            this.alternateTextButtons = this.customActionConfig.getTextButtons(this.context, 'alternate')
            this.alternateIconButtons = this.customActionConfig.getIconButtons(this.context, 'alternate')
        }

        $onDestroy() {
            if (this.$state.current !== this.current) {
                this.listService.onDestroy()
            }
        }

        createLargeTitle(row, path, name) {
            return _.reduce(row[path], (result, value, index) => {
                if (!result.length) {
                    return `${value[name]},`
                } else if (index + 1 === row[path].length) {
                    return `${result} and ${value[name]}`
                } else {
                    return `${result} ${value[name]},`
                }
            }, '')
        }
    }
}
