const _ = require('lodash')

require('./listTable.scss')

module.exports = {
    bindings: {
        changeSort: '&',
        cols: '<',
        context: '<',
        currentUser: '<',
        rows: '<',
        sort: '<',
        tableOptions: '<'
    },
    template: require('./listTable.html'),
    controller: class ListTable {
        /* @ngInject */
        constructor($state, customActionConfig, listService) {
            this.$state = $state
            this.customActionConfig = customActionConfig
            this.listService = listService
        }

        $onInit() {
            this.current = this.$state.current
            this.selectedRows = this.listService.getSelectedRows(this.rows)

            this.onSortChange = this.onSortChange.bind(this)
            this.onRowDeselect = this.onRowDeselect.bind(this)
            this.onRowSelect = this.onRowSelect.bind(this)
        }

        $onDestroy() {
            if (this.$state.current !== this.current) {
                this.listService.onDestroy()
            }
        }

        onSortChange(sort) {
            let params = {
                sort
            }

            if (!this.changeSort(params)) {
                return this.$state.go(this.$state.current, params)
            }
        }

        onRowDeselect(row) {
            this.listService.deselectRow(row)
        }

        onRowSelect(row) {
            if (_.get(this.tableOptions, 'multiSelect', false) === false) {
                this.listService.selectedRows = []
            }

            this.listService.selectRow(row)
        }

        getCell(col, row) {
            return _.get(row, col.path)
        }

        createLargeTitle(row, path, name) {
            return _.reduce(row[path], (result, value, index) => {
                if (!result.length) {
                    return `${value[name]},`
                } else if (index + 1 === row[path].length) {
                    return `${result} and ${value[name]}`
                } else {
                    return `${result} ${value[name]},`
                }
            }, '')
        }
    }
}
