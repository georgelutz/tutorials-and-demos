const _ = require('lodash')

module.exports = /* @ngInject */
    function($stateProvider) {
        return $stateProvider

            .state('logout', {
                url: '/logout',
                resolve: {
                    logout: function($state, authConfig, authService) {
                        return authService.logout()
                            .then(() => {
                                if (authConfig.requireLogin) {
                                    $state.go('auth.login')
                                } else {
                                    $state.go('nav.welcome', null, {reload: true})
                                }
                            })
                    }
                }
            })

            //need to keep this around for backward compatibility
            .state('auth', {
                template: '<ui-view></ui-view>'
            })

            .state('auth.login', {
                url: '/login',
                template: '<login></login>',
                resolve: {
                    login: function($q, $state, authConfig) {
                        if (!authConfig.requireLogin) {
                            _.defer(() => $state.go('nav.welcome'))
                            return $q.reject()
                        }
                    }
                }
            })

    }
