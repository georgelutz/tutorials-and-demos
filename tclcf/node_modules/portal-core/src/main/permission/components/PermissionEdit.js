require('../styles/permissionEdit.scss')

module.exports = {
    template: require('../views/permissionEdit.html'),
    controller: class PermissionEdit {
        /* @ngInject */
        constructor($log, $state, $translate, $translateDefaultInterpolation, loadingService, toastService) {
            this.$log = $log
            this.$state = $state
            this.$translate = $translate
            this.$translateDefaultInterpolation = $translateDefaultInterpolation
            this.loadingService = loadingService
            this.toastService = toastService
        }

        $onInit() {
            //TODO: replace this workaround when new router is available
            this.permission = this.$state.$current.locals.globals.permission
            this.perm = this.$state.$current.locals.globals.perm

            this.$translate([
                'permission.permissionEdit.confirm_save',
                'permission.permissionEdit.err_while_saving'
            ], {name: '{{name}}'}).then(resources => this.res = resources)
        }

        save() {
            const confirm_save = this.$translateDefaultInterpolation.interpolate(
                this.res['permission.permissionEdit.confirm_save'],
                {name: this.perm.name}
            )

            this.loadingService.loading(true)
            return this.perm.put()
                .then(() => {
                    this.toastService.show(confirm_save)
                    return this.$state.go('nav.permission.list')
                })
                .catch(err => {
                    this.loadingService.loading(false)
                    this.$log.error('Error saving permission.', err)
                    return this.toastService.show(this.res['permission.permissionEdit.err_while_saving'], {theme: 'warn'})
                })
                .finally(() => this.loadingService.loading(false))
        }

        confirmDelete(event) {
            return this.perm.confirmDelete(event).then(() => {
                if (this.perm.deleted) {
                    return this.$state.go('nav.permission.list')
                }
            })
        }
    }
}
