const _ = require('lodash')

require('./userList.scss')

module.exports = {
    template: require('./userList.html'),
    controller: class UserList {
        /* @ngInject */
        constructor($state, $stateParams, listService) {
            this.$state = $state
            this.$stateParams = $stateParams
            this.listService = listService
        }

        $onInit() {
            //TODO: replace this workaround when new router is available
            this.currentUser = this.$state.$current.locals.globals.currentUser
            this.users = this.$state.$current.locals.globals.users
            this.entityChips = this.$state.$current.locals.globals.entityChips
            this.roles = this.$state.$current.locals.globals.roles

            this.staticResults = _.map(this.roles, role => ({
                key: role.id,
                name: role.name,
                icon: 'people_outline',
                keywords: 'role permission',
                param: 'role',
                type: 'static'
            }))

            this.entities = ['customer', 'dealer', 'user']

            this.total = this.users.responseDescription.totalHits

            this.context = 'userList'

            this.toolbarTitle = 'userNew.common.user_list'

            this.cols = [
                {
                    name: 'userNew.common.username',
                    sortable: true,
                    template: '<a ng-href="/#/nav/user/details/{{row.key}}" class="list-row-link" ng-bind="row.userName"></a>'
                },
                {
                    name: 'userNew.common.first_name',
                    path: 'firstName',
                    sortable: true
                },
                {
                    name: 'userNew.common.last_name',
                    path: 'lastName',
                    sortable: true
                },
                {
                    name: 'userNew.common.organization',
                    path: 'userOrganizations[0].organizationTypeId'
                },
                {
                    name: 'userNew.common.contact',
                    template: '<span>{{row.userPhones[0].type | startCase}} {{row.userPhones[0].phone | phoneNumber}}</span>'
                },
                {
                    name: 'userNew.common.role',
                    path: 'userRoles[0].name'
                },
                {
                    name: 'userNew.common.status',
                    template: '<span translate="{{row.status ? \'userNew.common.active\' : \'userNew.common.inactive\'}}"></span>',
                    sortable: true
                }
            ]

            this.rows = this.users

            this.toolbarOptions = {
                densityButton: true,
                filterButton: true,
                refreshButton: true
            }

            this.tableOptions = {
                rowSelect: true
            }

            this.paginationOptions = {
                boundaryLinks: true,
                stateful: true,
                pageSizes: [10, 25, 50]
            }

            this.chipFilterOptions = {
                entities: this.entities,
                entityChips: this.entityChips,
                staticResults: this.staticResults
            }

            this.cardContent = '<user-card current-user="$ctrl.currentUser" user="row"></user-card>'

            this.page = _.toInteger(this.$stateParams.page) + 1
            this.pageSize = _.toInteger(this.$stateParams.pageSize)
            this.sort = this.$stateParams.sort
            this.density = this.$stateParams.density
        }

        chipsUpdated() {
            this.listService.selectedRows = []
        }
    }
}

