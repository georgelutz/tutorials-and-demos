describe('Changelogs', () => {
    let component
    let ctrl
    let $showdown
    let staticContentService
    let $log

    beforeEach(() => {
        $log = {}
        $log.error = sinon.stub()

        $showdown = {}

        staticContentService = {}
        staticContentService.getContent = sinon.stub()

        component = require('../../../main/core/components/Changelogs')
        ctrl = new component.controller($log, $showdown, Promise, staticContentService)
    })

    it('should load change logs', () => {
        let modules = ['mod1', 'mod2', 'mod3']
        let changelog0 = 'wee'
        let changelog1 = 'changelog1'
        let changelog2 = '<a href="someurl">changelog2</a>'
        staticContentService.getContent.withArgs('modules.json').resolves(modules)
        staticContentService.getContent.withArgs('changelogs/portal-core.md').resolves(changelog0)
        staticContentService.getContent.withArgs('changelogs/mod1.md').resolves(changelog1)
        staticContentService.getContent.withArgs('changelogs/mod2.md').resolves(changelog2)
        staticContentService.getContent.withArgs('changelogs/mod3.md').rejects('err')

        $showdown.makeHtml = input => `${input}html`

        return ctrl.$onInit()
            .then(() => {
                ctrl.changelogs.should.deep.equal([
                    {name: 'mod1', content: 'changelog1html'},
                    {name: 'mod2', content: '<a target="blank" href="someurl">changelog2</a>html'},
                    {name: 'mod3', content: 'Change log unavailable.'},
                    {name: 'portal-core', content: 'weehtml'}
                ])
            })
    })
})
