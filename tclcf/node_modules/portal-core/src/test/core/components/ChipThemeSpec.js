describe('ChipTheme', () => {
    let component
    let ctrl
    let $element
    let chipParent

    beforeEach(() => {
        chipParent = {
            addClass: sinon.stub(),
            removeClass: sinon.stub()
        }
        let parent2 = {
            parent: sinon.stub().returns(chipParent)
        }
        let parent1 = {
            parent: sinon.stub().returns(parent2)
        }
        $element = {
            parent: sinon.stub().returns(parent1)
        }

        component = require('../../../main/core/components/ChipTheme')
        ctrl = new component.controller($element)
        ctrl.theme = 'myTheme'
    })

    it('should add class on init', () => {
        ctrl.value = true

        ctrl.$onInit()

        chipParent.addClass.should.have.been.calledWith('myTheme')
    })

    it('should remove class on init', () => {
        ctrl.value = false

        ctrl.$onInit()

        chipParent.removeClass.should.have.been.calledWith('myTheme')
    })

    it('should add class on changes', () => {
        ctrl.value = true

        ctrl.$onChanges()

        chipParent.addClass.should.have.been.calledWith('myTheme')
    })

    it('should remove class on changes', () => {
        ctrl.value = false

        ctrl.$onChanges()

        chipParent.removeClass.should.have.been.calledWith('myTheme')
    })
})
