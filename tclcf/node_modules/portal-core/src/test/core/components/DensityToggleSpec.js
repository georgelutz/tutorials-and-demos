describe('DensityToggle', () => {
    var component
    var ctrl
    var $analytics
    var $state
    var $stateParams
    var $mdMedia

    beforeEach(function() {
        $analytics = {}
        $analytics.eventTrack = sinon.stub()

        $state = {}
        $state.go = sinon.stub()
        $state.current = {}
        $state.current.name = 'some_list'

        $stateParams = {}
        $stateParams.density = ''

        $mdMedia = sinon.stub()

        component = require('../../../main/core/components/DensityToggle')
        ctrl = new component.controller($analytics, $state, $stateParams, $mdMedia)
        ctrl.onChange = sinon.stub()
        ctrl.$onInit()
    })

    it('should initialize ', () => {
        ctrl.onChange.should.have.been.called
        ctrl.density.should.equal('high')
    })

    it('should use default view if state params are invalid ', () => {
        $stateParams.density = 'something'

        ctrl.$onInit()

        ctrl.onChange.should.have.been.called
        ctrl.density.should.equal('high')
    })

    it('should swap from compact to detailed view', () => {
        $stateParams.density = 'low'

        ctrl.$onInit()
        ctrl.click('high')

        ctrl.density.should.equal('high')
        $analytics.eventTrack('some_list', {category: 'Density View', label: 'high'})
        $state.go.should.have.been.called
    })

    it('should swap from detailed to compact view', () => {
        $stateParams.density = 'high'

        ctrl.$onInit()
        ctrl.click('low')

        ctrl.density.should.equal('low')
        $analytics.eventTrack('some_list', {category: 'Density View', label: 'low'})
        $state.go.should.have.been.called
    })
})

