describe('EntityTypeAhead', () => {
    var Restangular
    var component
    var ctrl

    beforeEach(() => {
        Restangular = {}
        Restangular.all = sinon.stub().returnsThis()
        Restangular.getList = sinon.stub()

        component = require('../../../main/core/components/EntityTypeAhead')
        ctrl = new component.controller(Restangular)
        ctrl.$onInit()
    })

    it('should prepopulate the value', () => {
        ctrl.$ctrl = {field: 'value'}
        ctrl.field = 'field'
        ctrl.$onInit()

        ctrl.selectedItem.should.equal('value')
    })

    it('should perform queries', () => {
        let term = 'term'
        ctrl.entity = 'entity'

        ctrl.performQuery(term)

        Restangular.all.should.have.been.calledWith('entity')
        Restangular.getList.should.have.been.calledWith({q: term, globalsearch: true})
    })

    it('should select valid items', () => {
        let item = {item: true}
        ctrl.$ctrl = {
            test: {
                $dirty: false
            }
        }
        ctrl.field = 'test'

        ctrl.$onInit()
        ctrl.selectedItemChange(item)

        ctrl.$ctrl.should.deep.equal({
            test: {
                item: true,
                $dirty: true
            }
        })
    })

    it('should select blank items', () => {
        ctrl.$ctrl = {
            test: {
                $dirty: false
            }
        }
        ctrl.field = 'test'

        ctrl.$onInit()
        ctrl.selectedItemChange()

        ctrl.$ctrl.should.deep.equal({
            test:{
                $dirty: true
            }
        })
    })
})

