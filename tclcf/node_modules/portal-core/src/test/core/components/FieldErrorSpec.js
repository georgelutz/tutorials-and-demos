describe('fieldError', () => {
    var field
    var form
    var fieldError
    var component
    var fieldErrorService

    beforeEach(() => {
        fieldErrorService = {
            fieldErrors: {}
        }
        field = 'abc'
        form = {}
        form.$error = {$invalid: false}
        form.abc = {$parsers: {push: sinon.stub()}}

        component = require('../../../main/core/components/FieldError')
        fieldError = new component.controller(fieldErrorService)
        fieldError.form = form
        fieldError.field = field
    })

    it('should have the correct settings', () => {
        fieldError.$onInit()
        fieldError.form.should.deep.equal(form)
    })

    it('should default values', () => {
        fieldError.$onInit()
        fieldError.field.should.equal('abc')
        fieldError.hideServerError.should.be.false
        fieldError.form.abc.$parsers.push.should.have.been.called
    })
})
