describe('SearchResults', () => {
    var component
    var ctrl
    var $stateParams
    var results
    var searchService
    var $state

    beforeEach(() => {
        $stateParams = {term: 'term'}
        results = {results: true, plain: sinon.stub().returnsThis()}
        searchService = {}

        $state = {}
        _.set($state, '$current.locals.globals', {
            results
        })

        component = require('../../../main/core/components/SearchResults')
        ctrl = new component.controller($state, $stateParams, searchService)
        ctrl.$onInit()
    })

    it('should expose results and term', () => {
        ctrl.term.should.equal($stateParams.term)
        ctrl.results.should.equal(results)
        ctrl.hasResults.should.be.true
    })

    it('should support going to list route', () => {
        searchService.routeToList = sinon.stub()

        ctrl.list('type')

        searchService.routeToList.should.have.been.calledWith('type', 'term')
    })

    it('should return the key property', () => {
        searchService.getTypeTranslationKey = sinon.stub()

        ctrl.key('type')

        searchService.getTypeTranslationKey.should.have.been.calledWith('type')
    })
})
