describe('phoneNumberDirective', function() {
    var phoneNumberDirective
    var $filter
    var phoneNumberFilter
    var $browser
    var scope
    var elem
    var attrs
    var modelController

    beforeEach(function() {
        phoneNumberFilter = sinon.stub().returns('1112223333')
        $filter = sinon.stub().withArgs('phoneNumber').returns(phoneNumberFilter)
        $browser = {}
        scope = {}
        attrs = {}

        elem = {}
        elem.bind = sinon.stub()

        modelController = {
            $formatters: [],
            $parsers: []
        }

        phoneNumberDirective = require('../../../main/core/directives/phoneNumberDirective')($filter, $browser)
        phoneNumberDirective.link(scope, elem, attrs, modelController)
    })

    it('should be restricted to an attribute', function() {
        phoneNumberDirective.restrict.should.equal('A')
    })

    function test(value) {
        elem.val = sinon.stub().returns(value)

        elem.bind.getCall(0).args[1]()
    }

    it('should format the viewValue when the model changes', function() {
        test('1234567890')

        // Check that the view was formatted
        elem.val.should.have.been.calledWith('1112223333')
        modelController.$viewValue.should.equal('1112223333')
    })
})
