describe('zHoverDirective', function() {
    var zHoverDirective

    beforeEach(function() {
        zHoverDirective = require('../../../main/core/directives/zHoverDirective')()
    })

    it('should be restricted to attribute usage', function() {
        zHoverDirective.restrict.should.equal('A')
    })

    it('should apply default class on over / out', function() {
        var element = {
            addClass: sinon.stub(),
            bind: sinon.stub(),
            removeClass: sinon.stub()
        }

        zHoverDirective.link(null, element, {})

        //over
        element.bind.withArgs('mouseover').getCall(0).args[1]()

        element.addClass.should.have.been.calledWith('md-whiteframe-6dp')
        element.removeClass.should.have.been.calledWith('md-whiteframe-1dp')

        //out
        element.bind.withArgs('mouseout').getCall(0).args[1]()

        element.addClass.should.have.been.calledWith('md-whiteframe-1dp')
        element.removeClass.should.have.been.calledWith('md-whiteframe-6dp')
    })

    it('should apply custom class on over / out', function() {
        var element = {
            addClass: sinon.stub(),
            bind: sinon.stub(),
            removeClass: sinon.stub()
        }

        zHoverDirective.link(null, element, {zHover: '123:456'})

        //over
        element.bind.withArgs('mouseover').getCall(0).args[1]()

        element.addClass.should.have.been.calledWith('md-whiteframe-456dp')
        element.removeClass.should.have.been.calledWith('md-whiteframe-123dp')

        //out
        element.bind.withArgs('mouseout').getCall(0).args[1]()

        element.addClass.should.have.been.calledWith('md-whiteframe-123dp')
        element.removeClass.should.have.been.calledWith('md-whiteframe-456dp')
    })
})
