describe('infiniteScrollFactory', function() {
    var infiniteScrollFactory
    var toastService

    beforeEach(function() {
        toastService = {show:sinon.stub()}

        infiniteScrollFactory = require('../../../main/core/factories/infiniteScrollFactory')(toastService)
    })

    it('should return a scroller', function() {

        var scroller = infiniteScrollFactory.getScroller([{dsn:123}, {dsn:456}], 1, function() {
            return {then: function(callback) {
                callback({dsn:71})
                return {catch:sinon.stub()}
            }}

        })

        scroller.getLength().should.equal(2)
        scroller.getItemAtIndex(0).should.deep.equal({dsn:123})
        // Causes a fetch page call
        scroller.getItemAtIndex(2)
    })

    it('should Add an extra row if page size = number of items', function() {

        var scroller = infiniteScrollFactory.getScroller([{dsn:123}, {dsn:456}], 2, function() {
            return {then: function(callback) {
                callback({dsn:71})
                return {catch:sinon.stub()}
            }}

        })

        scroller.getLength().should.equal(3)
        scroller.getItemAtIndex(0).should.deep.equal({dsn:123})

    })

    it('should handle catch', function() {

        var scroller = infiniteScrollFactory.getScroller([{dsn:123}, {dsn:456}], 2, function() {
            return { then:sinon.stub().returns({catch: function(callback) {
                callback()
            }}) }
        })

        scroller.getLength().should.equal(3)
        scroller.getItemAtIndex(0).should.deep.equal({dsn:123})
        scroller.getItemAtIndex(2)

    })
})
