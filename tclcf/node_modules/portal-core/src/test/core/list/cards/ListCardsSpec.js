describe('ListCards', () => {
    let $state
    let customActionConfig
    let listService
    let ListCards
    let ctrl

    beforeEach(() => {
        $state = {
            current: {},
            go: sinon.stub()
        }

        customActionConfig = {
            getTextButtons: sinon.stub().returns([]),
            getIconButtons: sinon.stub().returns([])
        }

        listService = {
            onDestroy: sinon.stub(),
            getSelectedRows: sinon.stub(),
            selectRow: sinon.stub(),
            deselectRow: sinon.stub()
        }

        ListCards = require('../../../../main/core/list/cards/ListCards')

        ctrl = new ListCards.controller($state, customActionConfig, listService)

        ctrl.$onInit()
    })

    it('should init ', () => {
        ctrl.current.should.deep.equal($state.current)

        ctrl.alternateTextButtons.should.deep.equal([])
        ctrl.alternateIconButtons.should.deep.equal([])
    })

    it('should destroy', () => {
        $state.current = {}

        ctrl.$onDestroy()

        listService.onDestroy.should.have.been.called
    })
})
