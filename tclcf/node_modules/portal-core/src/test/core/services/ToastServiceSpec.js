describe('ToastService', () => {
    let svc
    let $mdToast
    let simpleToast

    beforeEach(() => {
        simpleToast = {}
        $mdToast = {}
        $mdToast.show = sinon.stub().returns('promise')
        $mdToast.simple = sinon.stub().returns(simpleToast)
        simpleToast.theme = sinon.stub().returnsThis()
        simpleToast.content = sinon.stub().returnsThis()
        simpleToast.action = sinon.stub().returnsThis()
        simpleToast.highlightAction = sinon.stub().returnsThis()
        simpleToast.hideDelay = sinon.stub().returnsThis()
        simpleToast.position = sinon.stub().returnsThis()

        let ToastService = require('../../../main/core/services/ToastService')
        svc = new ToastService($mdToast)
    })

    it('should support showing basic toasts', () => {
        svc.show('toasty').should.equal('promise')

        $mdToast.simple.should.have.been.called
        simpleToast.theme.should.have.been.calledWith(null)
        simpleToast.content.should.have.been.calledWith('toasty')
        simpleToast.action.should.have.been.calledWith('OK')
        simpleToast.highlightAction.should.have.been.calledWith(false)
        simpleToast.hideDelay.should.have.been.calledWith(5000)
        simpleToast.position.should.have.been.calledWith('bottom left right')
        $mdToast.show.should.have.been.calledWith(simpleToast)
    })

    it('should support showing custom toasts', () => {
        svc.show('toastier', {
            theme: 'warn',
            hideDelay: 1,
            action: 'beep',
            position: 'relative'
        }).should.equal('promise')

        $mdToast.simple.should.have.been.called
        simpleToast.theme.should.have.been.calledWith('warn')
        simpleToast.content.should.have.been.calledWith('toastier')
        simpleToast.action.should.have.been.calledWith('beep')
        simpleToast.highlightAction.should.have.been.calledWith(false)
        simpleToast.hideDelay.should.have.been.calledWith(1)
        simpleToast.position.should.have.been.calledWith('relative')
        $mdToast.show.should.have.been.calledWith(simpleToast)
    })
})
