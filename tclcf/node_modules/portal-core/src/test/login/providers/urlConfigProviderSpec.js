describe('urlConfigProvider', () => {
    let urlConfigProvider

    beforeEach(() => {
        let constructor = require('../../../main/login/providers/urlConfigProvider')
        urlConfigProvider = {}
        _.bind(constructor, urlConfigProvider)()
    })

    function testUrl(env) {
        let $location = {}
        $location.host = sinon.stub()
        $location.host.returns(env)

        let urlConfig = urlConfigProvider.$get($location)

        return urlConfig.getUrl()
    }

    it('should have valid base urls', () => {
        testUrl('default').should.equal('http://security-gateway-rp-dev.connectedfleet.io:8080')
        testUrl('localhost').should.equal('http://security-gateway-rp-dev.connectedfleet.io:8080')
        testUrl('dev').should.equal('http://security-gateway-rp-dev.connectedfleet.io:8080')
        testUrl('qa').should.equal('http://security-gateway-rp-qa.connectedfleet.io:8080')
        testUrl('staging').should.equal('https://security-gateway-rp-staging.connectedfleet.io')
        testUrl('canary').should.equal('https://security-gateway-rp.fleethealth.io')
        testUrl('fleethealth').should.equal('https://security-gateway-rp.fleethealth.io')
    })

    it('should allow custom stuff', () => {
        urlConfigProvider.addEnv('WHOMP', /zoop/)
        urlConfigProvider.addUrl('WHOMP', 'beep')

        testUrl('zoop').should.equal('beep')
    })
})
