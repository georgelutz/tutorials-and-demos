describe('Login', () => {
    let component
    let ctrl
    let authService
    let themeService

    beforeEach(() => {
        authService = {}
        authService.isLoggedIn = sinon.stub()
        authService.login = sinon.stub().resolves({})

        themeService = {}
        themeService.getLogin = sinon.stub().returns('abc')

        component = require('../../../main/loginNew/components/Login')
        ctrl = new component.controller(authService, themeService)
    })

    it('should initialize', () => {
        ctrl.$onInit()

        ctrl.loginImageUrl.should.equal('abc')
        authService.login.should.have.been.called
    })

    it('should not show auth box when already logged in', () => {
        authService.isLoggedIn.returns(true)

        ctrl.$onInit()

        authService.login.should.not.have.been.called
    })

    it('should show login form again on error', () => {
        authService.login.onCall(0).rejects('err')
        authService.login.onCall(1).resolves('yay')

        return ctrl.login()
            .then(() => {
                authService.login.should.have.been.calledTwice
            })
    })
})
